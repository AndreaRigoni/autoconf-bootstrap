# Makefile.in generated by automake 1.16.5 from Makefile.am.
# examples/sh_template/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/autoconf-bootstrap
pkgincludedir = $(includedir)/autoconf-bootstrap
pkglibdir = $(libdir)/autoconf-bootstrap
pkglibexecdir = $(libexecdir)/autoconf-bootstrap
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
#am__append_1 = gnu-make
am__append_2 = $(IDE_CODE_LOCAL_DIR)
subdir = examples/sh_template
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/conf/m4/ak_enable_debug.m4 \
	$(top_srcdir)/conf/m4/ax_defun_local.m4 \
	$(top_srcdir)/conf/m4/ax_docker_build.m4 \
	$(top_srcdir)/conf/m4/ax_enable_kconfig.m4 \
	$(top_srcdir)/conf/m4/ax_gitignore_list.m4 \
	$(top_srcdir)/conf/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/conf/m4/ax_rpm_init.m4 \
	$(top_srcdir)/conf/m4/ax_target_selfhelp.m4 \
	$(top_srcdir)/conf/m4/libtool.m4 \
	$(top_srcdir)/conf/m4/ltoptions.m4 \
	$(top_srcdir)/conf/m4/ltsugar.m4 \
	$(top_srcdir)/conf/m4/ltversion.m4 \
	$(top_srcdir)/conf/m4/lt~obsolete.m4 \
	$(top_srcdir)/conf/m4/m4_ax_configure_args.m4 \
	$(top_srcdir)/conf/m4/m4_ax_is_release.m4 \
	$(top_srcdir)/conf/m4/m4_ax_python_devel.m4 \
	$(top_srcdir)/conf/m4/m4_ax_valgrind_check.m4 \
	$(top_srcdir)/conf/kscripts/docker.ac \
	$(top_srcdir)/conf/kscripts/build_common.ac \
	$(top_srcdir)/conf/kscripts/toolchain.ac \
	$(top_srcdir)/conf/kscripts/python.ac \
	$(top_srcdir)/conf/autoconf-doxygen/doxygen.ac \
	$(top_srcdir)/conf/kscripts/ext_ccStickers.ac \
	$(top_srcdir)/conf/kscripts/ext_mdsplus.ac \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Common.mk \
	$(top_srcdir)/conf/kscripts/build_common.mk \
	$(top_srcdir)/conf/kscripts/toolchain.mk
ACLOCAL = ${SHELL} '/home/andrea/devel/rfx/autoconf-bootstrap/conf/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = $(VERBOSE_LEVEL)
AR = ar
AUTOCONF = ${SHELL} '/home/andrea/devel/rfx/autoconf-bootstrap/conf/missing' autoconf
AUTOHEADER = ${SHELL} '/home/andrea/devel/rfx/autoconf-bootstrap/conf/missing' autoheader
AUTOMAKE = ${SHELL} '/home/andrea/devel/rfx/autoconf-bootstrap/conf/missing' automake-1.16
AWK = gawk
BUILD_CUSTOM_GNUMAKE_DIR = 
BUILD_CUSTOM_GNUMAKE_URL = 
CC = gcc
CCDEPMODE = depmode=gcc3
CCSTICKERS_URL = 
CFLAGS =  -g -O0
CODE_SERVER_AUTH = none
CODE_SERVER_HOST = 0.0.0.0
CODE_SERVER_PORT = 8080
CODE_SERVER_URL = https://github.com/cdr/code-server/releases/download/2.1692-vsc1.39.2/code-server2.1692-vsc1.39.2-linux-x86_64.tar.gz
CONFIG_STATUS_DEPENDENCIES = $(top_builddir)/.config
CPPFLAGS = 
CROSS_COMPILE = arm-linux-gnueabihf-
CSCOPE = cscope
CTAGS = ctags
CURL = /bin/curl
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -g -O0
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOCKER_ENTRYPOINT = /bin/sh
DOCKER_NETWORKS = 
DOCKER_PROFILE = 
DOCKER_PROFILE_debug = 
DOCKER_PS1 = 
DOCKER_RUNARGS = 
DOCKER_SHARES = 
DOWNLOADS = 
DOWNLOAD_DIR = /home/andrea/devel/rfx/autoconf-bootstrap/downloads
DOXYGEN_BINARY = 
DOXYGEN_CHI = 
DOXYGEN_CHM = 
DOXYGEN_DOT = 
DOXYGEN_HTML = 
DOXYGEN_MAN = 
DOXYGEN_MODULES = 
DOXYGEN_MODULES_AVAILABLE = 
DOXYGEN_MODULES_DISABLED = 
DOXYGEN_MODULES_ENABLED = 
DOXYGEN_PAPER_SIZE = 
DOXYGEN_PDF = 
DOXYGEN_PS = 
DOXYGEN_RTF = 
DOXYGEN_XML = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = 
DX_DOCDIR = 
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV = 
DX_FLAG_chi = 
DX_FLAG_chm = 
DX_FLAG_doc = 
DX_FLAG_dot = 
DX_FLAG_html = 
DX_FLAG_man = 
DX_FLAG_pdf = 
DX_FLAG_ps = 
DX_FLAG_rtf = 
DX_FLAG_xml = 
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = 
DX_PROJECT = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_DEBUG = yes
ENABLE_JUPYTER_NOTEBOOK = no
ETAGS = etags
EXAMPLE_BOOL_VAR = 
EXAMPLE_STRING_VAR = 
EXEEXT = 
EXT_MDSPLUS_BRANCH = 
EXT_MDSPLUS_CONFIGURE_ARGS = 
EXT_MDSPLUS_URL = 
EXT_MODULES = 
FGREP = /bin/grep -F
FILECMD = file
GREP = /bin/grep
HAVE_DOCKER = yes
IDE = code
IDE_BIN = /bin/code
IDE_CODE_DOWNLOAD_URL = https://go.microsoft.com/fwlink/?LinkID=620884
IDE_CODE_LOCAL_DIR = /home/andrea/devel/rfx/autoconf-bootstrap/conf/ide/code_local
IDE_CODE_LOCAL_EXTENSIONS_PATH = /home/andrea/devel/rfx/autoconf-bootstrap/conf/ide/vs_code/extensions
IDE_WSDIR = /home/andrea/devel/rfx/autoconf-bootstrap/conf/ide
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JPNB_BROWSER = 
JPNB_CONFIG = 
JPNB_DIR = 
JPNB_IP = 
JPNB_PASSWD = 
JPNB_PORT = 
LD = /bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/home/andrea/devel/rfx/autoconf-bootstrap/conf/missing' makeinfo
MAKE_PROCESS = 12
MANIFEST_TOOL = :
MDSPLUS_DIR = /usr/local/mdsplus
MDS_JAVA = yes
MDS_LIBSUFFIX = 
MDS_LV = 
MDS_MODULES =  java
MDS_NI = 
MDS_SRCDIR = 
MKDIR_P = /bin/mkdir -p
NM = /bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = autoconf-bootstrap
PACKAGE_BUGREPORT = andrea.rgn@gmail.com
PACKAGE_NAME = autoconf-bootstrap
PACKAGE_STRING = autoconf-bootstrap 0.1
PACKAGE_TARNAME = autoconf-bootstrap
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PERL = perl
PYTHON = /bin/python
PYTHON_CONDA_DIR = 
PYTHON_CONDA_ENV = 
PYTHON_CPPFLAGS = 
PYTHON_ENV_SYSTEM = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_GETPIP_URL = 
PYTHON_LIBS = 
PYTHON_SITE_PKG = 
PYTHON_VENV_ACTIVATE_SCRIPT = 
PYTHON_VERSION = 
RANLIB = ranlib
RPM_ARGS = 
RPM_CONFIGURE_ARGS =  '--enable-kconfig'
RPM_DIR = 
RPM_PROG = 
RPM_RELEASE = 1
RPM_TARBALL = 
RPM_TARGET = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TAR = tar
TOOLCHAIN_DIR = 
TOOLCHAIN_TAR = 
UNIQ = uniq
VERBOSE_LEVEL = 0
VERSION = 0.1
WC = wc
YACC = bison -y
YFLAGS = 
abs_builddir = /home/andrea/devel/rfx/autoconf-bootstrap/examples/sh_template
abs_srcdir = /home/andrea/devel/rfx/autoconf-bootstrap/examples/sh_template
abs_top_builddir = /home/andrea/devel/rfx/autoconf-bootstrap
abs_top_srcdir = /home/andrea/devel/rfx/autoconf-bootstrap
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/andrea/devel/rfx/autoconf-bootstrap/conf/install-sh
kconfig_dir = conf/kconfig
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
ak__DOWNLOADS = $(DOWNLOADS) $(am__append_1) ak__cdr-code-server

# VERBOSITY VARIABLE that is usable in Makefile if clause
# See Automake AM_V_P for comparison in bash if clauses
AK_V_IF = $(ak__v_IF_$(V))
ak__v_IF_ = $(ak__v_IF_$(AM_DEFAULT_VERBOSITY))
ak__v_IF_0 = mark 
ak__v_IF_1 = 

# A literal space.
ak__empty := 
ak__space := $(ak__empty) $(ak__empty)

# Joins elements of the list in arg 2 with the given separator.
#   1. Element separator.
#   2. The list.
ak__join_with = $(subst $(ak__space),$1,$(strip $2))
dl__tar_ext = %.tar %.tar.gz %.tar.xz %.tar.bz %.tar.bz2
dl__git_ext = git://% %.git
_fname = $(subst -,_,$(subst ' ',_,$(subst .,_,$1)))
ak__DIRECTORIES = $(DIRECTORIES) $(ATOM_HOME) \
	$(ak__QTCREATOR_SETTINGS_PATH) $(ak__VS_CODE_PATH) \
	$(am__append_2)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(ak__DIST_COMMON)
ak__DIST_COMMON = \
                  $(top_srcdir)/bootstrap \
				  $(top_srcdir)/conf/update_submodules.sh \
				  $(top_srcdir)/Kconfig \
				  $(wildcard $(patsubst %.ac,%.kconfig,$(filter %.ac,$(am__aclocal_m4_deps))))

#gnu_make_URL = http://ftp.gnu.org/gnu/make/make-4.1.tar.gz
#gnu_make_DIR = $(BUILD_CUSTOM_GNUMAKE_DIR)
#_ = $(BUILD_CUSTOM_GNUMAKE_DIR)/make
#MAKE = $(BUILD_CUSTOM_GNUMAKE_DIR)/make
edit_DEPS = edit-qtcreator_qws_files
ak__ATOM_PACKAGES = $(ATOM_PACKAGES) project-manager atom-ide-ui \
	ide-python teletype refactor autocomplete-clang goto build \
	build-make
ATOM_PACKAGES_PATH = $(addprefix $(ATOM_HOME)/packages/,$(ak__ATOM_PACKAGES))

# ////////////////////////////////////////////////////////////////////////////////
# //  QTCREATOR  /////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////
ak__QTCREATOR_SETTINGS_PATH = $(or $(QTCREATOR_SETTINGS_PATH),$(abs_top_builddir)/conf/ide)

# ////////////////////////////////////////////////////////////////////////////////
# //  VS CODE  ///////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////
ak__VS_CODE_PATH = $(or $(VS_CODE_PATH),$(abs_top_builddir)/conf/ide/vs_code)
ak__VS_CODE_ARGS = $(VS_CODE_ARGS)
ak__VS_CODE_PROJECT_PATH = $(or $(VS_CODE_PROJECT_PATH),$(top_srcdir))
ak__VS_CODE_EXTENSIONS = ms-vscode.cpptools \
							ms-python.python \
							maelvalais.autoconf \
							$(VS_CODE_EXTENSIONS)

ak__VS_CODE_EXTENSIONS_PATH = --extensions-dir=$(IDE_CODE_LOCAL_EXTENSIONS_PATH)

# ////////////////////////////////////////////////////////////////////////////////
# //  CDR CODE SERVER  ///////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////
ak__CODE_SERVER_HOST = $(or $(CODE_SERVER_HOST),0.0.0.0)
ak__CODE_SERVER_PORT = $(or $(CODE_SERVER_PORT),8080)
ak__CODE_SERVER_AUTH = $(or $(CODE_SEVER_AUTH),none)
ak__CODE_SERVER_URL = $(or $(CODE_SERVER_URL),https://github.com/cdr/code-server/releases/download/3.4.1/code-server-3.4.1-linux-x86_64.tar.gz)
ak__cdr_code_server_URL = $(ak__CODE_SERVER_URL)
ak__cdr_code_server_DIR = $(top_builddir)/conf/ide/code-server
ARCH = arm
# TOOLCHAIN_DIR           ?= ${abs_top_builddir}/toolchain
TOOLCHAIN_PATH = ${TOOLCHAIN_DIR}/bin

# I was not able to compile regex for escaped $
__ax_awk_envsubst = $(AWK) '{while(match($$0,"[^\\$$]{[^}]*}")) {var=substr($$0,RSTART+2,RLENGTH-3);gsub("[$$]{"var"}",ENVIRON[var])}}1' < $1 > $2
__ax_pl_envsubst = $(PERL) -pe 's/([^\\]|^)\$$\{([a-zA-Z_][a-zA-Z_0-9]*)\}/$$1.$$ENV{$$2}/eg' < $1 > $2
SUFFIXES = .sh .sh.template
SH_FILES = script.sh
CLEANFILES = $(SH_FILES)
EXTRA_DIST = $(SH_FILES)
all: all-am

.SUFFIXES:
.SUFFIXES: .sh .sh.template
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Common.mk $(top_srcdir)/conf/kscripts/build_common.mk $(top_srcdir)/conf/kscripts/toolchain.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign examples/sh_template/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign examples/sh_template/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Common.mk $(top_srcdir)/conf/kscripts/build_common.mk $(top_srcdir)/conf/kscripts/toolchain.mk $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags TAGS:

ctags CTAGS:

cscope cscopelist:

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	cscopelist-am ctags-am distclean distclean-generic \
	distclean-libtool distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags-am uninstall uninstall-am

.PRECIOUS: Makefile


MAKE_PROCESS  ?= $(shell grep -c ^processor /proc/cpuinfo)
DOWNLOAD_DIR  ?= $(top_builddir)/downloads
DOWNLOADS     ?= $(ak__DOWNLOADS)

# PERL ENV SUBST
# --------------
# This can be used to make a sh substitution template by calling $(call __ax_pl_envsubst, template, target)
#
# __ax_pl_envsubst ?= $(PERL) -pe 's/([^\\]|^)\$$\{([a-zA-Z_][a-zA-Z_0-9]*)\}/$$1.$$ENV{$$2}/eg' < $1 > $2
__ax_pl_envsubst  ?= $(PERL) -pe 's/([^\\]|^)\$$\{([a-zA-Z_][a-zA-Z_0-9]*)\}/$$1.$$ENV{$$2}/eg;s/\\\$$/\$$/g;' < $1 > $2
__ax_pl_envsubst2 ?= $(PERL) -pe 's/([^\\]|^)\$$\(([a-zA-Z_][a-zA-Z_0-9]*)\)/$$1.$$ENV{$$2}/eg;s/\\\$$/\$$/g;' < $1 > $2

# $(ak__ENVPARSEFILES):
# 	@ $(call __ax_pl_envsubst2,$<,$@);

# FILTER ALL REPETITIONS IN A LIST
# --------------------------------
ak__uniq ?= $(if $1,$(firstword $1) $(call ak__uniq,$(filter-out $(firstword $1),$1)))

# FLAT NAME SUBST
# ---------------
ak__flt ?= $(subst -,_,$(subst ' ',_,$(subst .,_,$1)))

define dl__download_tar
 $(info "Downloading tar file: $1") \
 $(MKDIR_P) ${DOWNLOAD_DIR} $2; \
 _tar=${DOWNLOAD_DIR}/$$(echo $1 | sed -e 's|.*/||'); \
 test -f $$_tar || curl -SL $1 > $$_tar; \
 _wcl=$$(tar -tf $$_tar | sed -e 's|/.*||' | uniq | wc -l); \
 if test $$_wcl = 1; then \
  tar -xf $$_tar -C $2 --strip 1; \
 else \
  tar -xf $$_tar -C $2; \
 fi
endef

define dl__download_git
 $(info "Downloading git repo: $1") \
 git clone $1 $2 $(if $3,-b $3)
endef

define dl__download_generic
 $(info "Downloading file: $1") \
 $(MKDIR_P) ${DOWNLOAD_DIR}; \
 _f=${DOWNLOAD_DIR}/$$(echo $1 | sed -e 's|.*/||'); \
 test -f $$_f || curl -SL $1 > $$_f; \
 $(LN_S) $$_f $2;
endef

define dl__dir =
$(if $(${_fname}_DIR),
$(${_fname}_DIR): $$(${_fname}_DEPS)
	@ $(MAKE) $(AM_MAKEFLAGS) download NAME=$1 DOWNLOAD_DIR=$(DOWNLOAD_DIR)
)
endef
$(foreach x,$(ak__DOWNLOADS),$(eval $(call dl__dir,$x)))

# $(ak__DOWNLOADS): _flt = $(subst -,_,$(subst ' ',_,$(subst .,_,$1)))
$(ak__DOWNLOADS): 
	@ $(MAKE) $(AM_MAKEFLAGS) download NAME=$@ DOWNLOAD_DIR=$(DOWNLOAD_DIR)

.PHONY: download
download: ##@@miscellaneous download target in $NAME and $DOWNLOAD_URL
download: FNAME   = $(subst -,_,$(subst ' ',_,$(subst .,_,$(NAME))))
download: URL     = $(or $($(FNAME)_URL),$(DOWNLOAD_URL))
download: DIR     = $(or $($(FNAME)_DIR),$(NAME))
download: BRANCH  = $(or $($(FNAME)_BRANCH),$(BRANCH))
download: $(or $($(FNAME)_DEPS), $(DOWNLOAD_DEPS))
	@ $(foreach x,$(URL), $(info DOWNLOAD_DIR = $(DOWNLOAD_DIR))\
		$(info Download: $x to $(DIR)) \
		$(if $(filter $(dl__tar_ext),$x),$(call dl__download_tar,$x,$(DIR)), \
		$(if $(filter $(dl__git_ext),$x),$(call dl__download_git,$x,$(DIR),$(BRANCH)), \
		$(call dl__download_generic,$x,$(DIR)) ) ) \
	   )
$(ak__DIRECTORIES):
	@ $(info buildinf dir for: $@) $(MKDIR_P) $@

#  USAGE: to install name as a whole directory add the following target:
#
#  install-<name>DATA:
# 	 @ $(MAKE) ak__$@
#
ak__install-%DATA:
	@$(NORMAL_INSTALL)
	@list='$($*_DATA)'; test -n "$($*dir)" || list=; \
	 if test -n "$$list"; then \
	   echo " $(MKDIR_P) '$(DESTDIR)$($*dir)'"; \
	   $(MKDIR_P) "$(DESTDIR)$($*dir)" || exit 1; \
	 fi; \
	 for p in $$list; do \
	   if test -f "$$p"; then echo "$$p"; \
	   else p="$(srcdir)/$$p"; \
	    if test -f "$$p"; then echo "$$p"; fi; \
	   fi; \
	 done | $(am__base_list) | \
	 while read files; do \
	   echo " $(INSTALL_DATA) $$files '$(DESTDIR)$($*dir)'"; \
	   $(INSTALL_DATA) $$files "$(DESTDIR)$($*dir)" || exit $$?; \
	 done; \
	 for p in $$list; do \
	   if test -d "$$p"; then echo "$$p"; \
	   else p="$(srcdir)/$$p"; \
	    if test -d "$$p"; then echo "$$p"; fi; \
	   fi; \
	 done | $(am__base_list) | \
	 while read drs; do \
	 	echo "copy directory: $$drs to $(DESTDIR)$($*dir)"; \
	 	cp -au $$drs "$(DESTDIR)$($*dir)"; \
	 done

#$(BUILD_CUSTOM_GNUMAKE_DIR)/Makefile: | gnu-make
#	@ cd $(dir $@) && ./configure

#$(BUILD_CUSTOM_GNUMAKE_DIR)/make: MAKE = make
#$(BUILD_CUSTOM_GNUMAKE_DIR)/make: $(BUILD_CUSTOM_GNUMAKE_DIR)/Makefile
#	@ make -C $(dir $@) all

IDE ?= code
edit: ##@miscellaneous start editor define in $IDE
edit: $(edit_DEPS) edit-$(IDE)

# ////////////////////////////////////////////////////////////////////////////////
# //  ATOM  //////////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////

ATOM_HOME         ?= $(abs_top_builddir)/conf/ide/atom
ATOM_PROJECT_PATH ?= $(top_srcdir) $(builddir)

#ak__PYTHON_PACKAGES += setuptools python-language-server[all]

export ATOM_HOME
$(ATOM_PACKAGES_PATH):
	@ apm install $(notdir $@)

apm-list: ##@@atom apm list packages in $ATOM_HOME
apm-%: | $(ATOM_HOME)
	@ apm $*

apm-install: ##@@atom apm install packages in $ATOM_HOME
apm-install: $(ATOM_PACKAGES_PATH)
edit-atom: ##@@ide start atom
edit-atom: | apm-install
	@ atom $(foreach d,$(ATOM_PROJECT_PATH),-a $d )

# ////////////////////////////////////////////////////////////////////////////////
# //  EMACS  /////////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////

edit-emacs: ##@@ide start emacs
edit-emacs:
	@ emacs $(srcdir)
QTCREATOR_THEME ?= dark
QTCREATOR_COLOR ?= Inkpot
edit-qtcreator: ##@@ide start qtcreator
edit-qtcreator: | $(ak__QTCREATOR_SETTINGS_PATH)
	@ qtcreator -settingspath $(ak__QTCREATOR_SETTINGS_PATH) \
					-theme $(QTCREATOR_THEME) -color $(QTCREATOR_COLOR)

# ////////////////////////////////////////////////////////////////////////////////
# //  QWS  ///////////////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////
#
%.qws: %.template.qws
	 @ $(call __ax_pl_envsubst,$<,$@);

edit-qtcreator_qws_files: QWS_FILES_TEMPLATES = $(shell find $(top_srcdir)/conf/ide/QtProject/qtcreator/ -name '*.qws.template' 3>/dev/null)
edit-qtcreator_qws_files: QWS_FILES = $(QWS_FILES_TEMPLATES:.qws.template=.qws)
edit-qtcreator_qws_files: abs_top_srcdir := $(abs_top_srcdir)
edit-qtcreator_qws_files: $(QWS_FILES)

edit-code: ##@@ide start visual studio code editor
edit-code: ##@@vs_code start visual studio code editor
edit-code-ext: ##@@vs_code list visual studio extensions
edit-code-extinstall: ##@@vs_code install all visual studio extensions in $IDE_CODE_EXTENSIONS
$(IDE_CODE_LOCAL_DIR)/bin/code: | $(DOWNLOAD_DIR) $(IDE_CODE_LOCAL_DIR) 
	- curl -SL $(IDE_CODE_DOWNLOAD_URL) > $(DOWNLOAD_DIR)/vs_code_local.tar.gz; \
	$(call dl__download_tar,$(DOWNLOAD_DIR)/vs_code_local.tar.gz,$(IDE_CODE_LOCAL_DIR)); \
	[ -f $@          ] && patch $@ < $(kconfig_dir)/patch/vs_code_libxcb.patch; \
	[ -f $@-insiders ] && patch $@-insiders < $(kconfig_dir)/patch/vs_code_insiders_libxcb.patch; \
	[ -f $@-insiders ] && ln -s $@-insiders $@; 

edit-code: $(IDE_CODE_LOCAL_DIR)/bin/code
	$(IDE_CODE_LOCAL_DIR)/bin/code \
	 -n $(ak__VS_CODE_PROJECT_PATH)  --user-data-dir $(ak__VS_CODE_PATH) \
	 $(ak__VS_CODE_EXTENSIONS_PATH) $(ak__VS_CODE_ARGS) 

edit-code-ext: $(IDE_CODE_LOCAL_DIR)/bin/code
	@ $(IDE_CODE_LOCAL_DIR)/bin/code --user-data-dir $(ak__VS_CODE_PATH) \
	  $(ak__VS_CODE_EXTENSIONS_PATH) $(ak__VS_CODE_ARGS) --list-extensions

edit-code-extinstall: $(IDE_CODE_LOCAL_DIR)/bin/code
	@ $(foreach x,$(ak__VS_CODE_EXTENSIONS),$(IDE_CODE_LOCAL_DIR)/bin/code \
	  --user-data-dir $(ak__VS_CODE_PATH) $(ak__VS_CODE_ARGS) \
	  $(ak__VS_CODE_EXTENSIONS_PATH) --install-extension $x;)

#edit-code: ##@@ide start visual studio code editor
#edit-code: ##@@vs_code start visual studio code editor
#edit-code-ext: ##@@vs_code list visual studio extensions
#edit-code-extinstall: ##@@vs_code install all visual studio extensions in $IDE_CODE_EXTENSIONS
#edit-code: | $(ak__VS_CODE_PATH)
#	@ code -n $(ak__VS_CODE_PROJECT_PATH)  --user-data-dir $(ak__VS_CODE_PATH) \
#	 $(ak__VS_CODE_EXTENSIONS_PATH) $(ak__VS_CODE_EXTENSIONS_PATH) $(ak__VS_CODE_ARGS) \
#	 --enable-proposed-api ms-vscode-remote.remote-ssh

#edit-code-ext:
#	@ code --user-data-dir $(ak__VS_CODE_PATH) $(ak__VS_CODE_EXTENSIONS_PATH) \
#	 $(ak__VS_CODE_ARGS) --list-extensions

#edit-code-extinstall:
#	@ $(foreach x,$(ak__VS_CODE_EXTENSIONS),code --user-data-dir $(ak__VS_CODE_PATH) \
#	 $(ak__VS_CODE_EXTENSIONS_PATH) $(ak__VS_CODE_ARGS) --install-extension $x;)
ak__cdr-code-server: 

edit-code-server: ##@@ide start cdr vs code server installed in conf/code-server
edit-code-server: ak__cdr-code-server
	$(ak__cdr_code_server_DIR)/code-server --host $(ak__CODE_SERVER_HOST) --port $(ak__CODE_SERVER_PORT) --auth $(ak__CODE_SERVER_AUTH) \
	--user-data-dir $(ak__VS_CODE_PATH) $(ak__VS_CODE_EXTENSIONS_PATH) $(top_srcdir)

# /////////////////////////////////////////////////////////////////////////////
# // RECONFIGURE  /////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////

.PHONY: reconfigure
reconfigure: ##@miscellaneous re-run configure with last passed arguments
	@ \
	$(info \n\n -- Reconfiguring build directory: -----------") \
	cd '$(abs_top_builddir)' && ./config.status --recheck

shell: ##@miscellaneous start a $(SHELL) using make context
shell:
	$(SHELL)

print-env-: ##@@miscellaneous print-env-% print env variable
print-env-%:
	@ $(if $($*),$(info $*="$($*)"),$(info $* not set)):;

# /////////////////////////////////////////////////////////////////////////////
# //  TOOLCHAIN  //////////////////////////////////////////////////////////////
# /////////////////////////////////////////////////////////////////////////////
#
TOOLCHAIN_DIR ?= $(top_builddir)/toolchain
#$(top_builddir)/toolchain:
#	@ \
#	  mkdir -p ${DL} $@; \
#	  echo "getting toolchain from tar: ${TOOLCHAIN_TAR}"; \
#	  _tar=${DL}/$$(echo $(TOOLCHAIN_TAR) | sed -e 's|.*/||'); \
#	  test -f $$_tar || curl -SL $(TOOLCHAIN_TAR) > $$_tar; \
#	  _wcl=$$(tar -tJf $$_tar | sed -e 's|/.*||' | uniq | wc -l); \
#	  if test $$_wcl = 1; then \
#	  tar -xJf $$_tar -C $@ --strip 1; \
#	  else \
#	  tar -xJf $$_tar -C $@; \
#	  fi
$(top_builddir)/toolchain:

export PATH := ${TOOLCHAIN_PATH}:${PATH}

$(CROSS_TARGETS): export CC:=$(CROSS_COMPILE)$(CC)
$(CROSS_TARGETS): export CXX:=$(CROSS_COMPILE)$(CXX)
$(CROSS_TARGETS): export AR:=$(CROSS_COMPILE)$(AR)
$(CROSS_TARGETS): export AS:=$(CROSS_COMPILE)$(AS)

# include $(top_srcdir)/conf/kscripts/docker.mk

SH_GREEN  ?= $(shell tput -Txterm setaf 2)
SH_WHITE  ?= $(shell tput -Txterm setaf 7)
SH_YELLOW ?= $(shell tput -Txterm setaf 3)
SH_RESET  ?= $(shell tput -Txterm sgr0)

HELP_DESCRIPTION ?= Documented targets follow

ifndef SELFHELP_FUNC
SELFHELP_FUNC = \
    %help; \
    %help_var; \
    while(<>) { \
	if(/^([a-zA-Z0-9_\-\.]+):.*\#\#(?:@(\w+))?\s(.*)$$/) { \
	    push(@{$$help{$$2}}, [$$1, $$3]); } \
	if(/^\#@(\w+)?\s?(\w+)?\s*(.*)$$/) { \
	    push(@{$$help_var{$$1}}, [$$2, $$3]); } \
    }; \
    print "\n"; \
    print "| ${HELP_DESCRIPTION}\n"; \
    print "| \n"; \
    print "| ${SH_GREEN}usage: make target${SH_RESET}\n"; \
    print "| \n"; \
    for ( sort keys %help ) { \
	print "| ${SH_YELLOW}$$_${SH_RESET}:\n"; \
	printf("|   %-40s %-80s\n", $$_->[0], $$_->[1]) for @{$$help{$$_}}; \
	print "| \n"; \
    printf("|   env: %-35s %-80s\n", $$_->[0], $$_->[1]) for @{$$help_var{$$_}}; \
	print "| \n"; \
    } \
    print "\n";

SELFHELP_ADVANCED_FUNC = \
    %help; \
    %help_var; \
    while(<>) { \
	if(/^([a-zA-Z0-9_\-\.]+):.*\#\#(?:@(\w+))?\s(.*)$$/) { \
	    push(@{$$help{$$2}}, [$$1, $$3]); } \
	if(/^([a-zA-Z0-9_\-\.]+):.*\#\#(?:@@(\w+))?\s(.*)$$/) { \
	    push(@{$$help{$$2}}, [$$1, $$3]); } \
	if(/^\#@(\w+)?\s?(\w+)?\s*(.*)$$/) { \
	    push(@{$$help_var{$$1}}, [$$2, $$3]); } \
	if(/^\#@@(\w+)?\s?(\w+)?\s*(.*)$$/) { \
	    push(@{$$help_var{$$1}}, [$$2, $$3]); } \
    }; \
    print "\n"; \
	print ", ${SH_GREEN}ADVANCED TARGETS ${SH_RESET}\n"; \
	print "| \n"; \
	for ( sort keys %help ) { \
	print "| ${SH_YELLOW}$$_${SH_RESET}:\n"; \
	printf("|   %-40s %-80s\n", $$_->[0], $$_->[1]) for @{$$help{$$_}}; \
	print "| \n"; \
    printf("|   env: %-35s %-80s\n", $$_->[0], $$_->[1]) for @{$$help_var{$$_}}; \
	print "| \n"; \
	} \
    print "\n";

SELFHELP_PRINT_TARGET_LIST_FUNC = \
    %help; \
    while(<>) { \
    if(/^([a-zA-Z0-9_\-\.]+):.*\#\#(?:@(\w+))?\s(.*)$$/) { \
    	push(@{$$help{$$2}}, [$$1, $$3]); } \
    if(/^([a-zA-Z0-9_\-\.]+):.*\#\#(?:@@(\w+))?\s(.*)$$/) { \
    	push(@{$$help{$$2}}, [$$1, $$3]); } \
    }; \
    for ( sort keys %help ) { \
    printf("%s ", $$_->[0]) for @{$$help{$$_}}; \
    } \

SELFHELP_TARGETS = $(shell perl -e '$(SELFHELP_PRINT_TARGET_LIST_FUNC)' $(MAKEFILE_LIST))

help:         ##@miscellaneous Show this help.
help-more:    ##@miscellaneous get help on advanced targets.
help-targets: ##@@miscellaneous get list of target with help signature

help-targets:
	@ $(info $(SELFHELP_TARGETS)):;

help:
	@perl -e '$(SELFHELP_FUNC)' $(MAKEFILE_LIST)

help-more:
	@perl -e '$(SELFHELP_ADVANCED_FUNC)' $(MAKEFILE_LIST)

endif

DL   ?= $(DOWNLOAD_DIR)
TMP  ?= $(abs_top_builddir)

${DL} ${TMP}:
	@$(MKDIR_P) $@
.sh.template.sh:
	@ $(call __ax_pl_envsubst,$<,$@); \
	source ./$@

export VERSION
export top_srcdir
export top_builddir

all: $(SH_FILES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
